(()=>{"use strict";var e={d:(t,r)=>{for(var l in r)e.o(r,l)&&!e.o(t,l)&&Object.defineProperty(t,l,{enumerable:!0,get:r[l]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(e,t){let r=0,l=0;return{name:e,hit:()=>{++l,l===t&&++r},length:t,showHits:()=>l,isSunk:()=>r}}function r(){const e={a1:"",a2:"",a3:"",a4:"",a5:"",a6:"",a7:"",a8:"",b1:"",b2:"",b3:"",b4:"",b5:"",b6:"",b7:"",b8:"",c1:"",c2:"",c3:"",c4:"",c5:"",c6:"",c7:"",c8:"",d1:"",d2:"",d3:"",d4:"",d5:"",d6:"",d7:"",d8:"",e1:"",e2:"",e3:"",e4:"",e5:"",e6:"",e7:"",e8:"",f1:"",f2:"",f3:"",f4:"",f5:"",f6:"",f7:"",f8:"",g1:"",g2:"",g3:"",g4:"",g5:"",g6:"",g7:"",g8:"",h1:"",h2:"",h3:"",h4:"",h5:"",h6:"",h7:"",h8:""},r=[];return{coordinates:e,placeCarrier:(l,a)=>{const n=t("carrier",5);let[o,c]=l.split("");if(c=Number(c),!1===a){if(c+n.length<10){for(let t=c;t<c+n.length;t++)e[o+t]="carrier";r.push(n)}}else if(!0===a&&o.charCodeAt()+n.length<105){let t=o.charCodeAt();for(let r=t;r<t+n.length;r++){let t=String.fromCharCode(r);e[t+c]="carrier"}r.push(n)}},placeBattleship:(l,a)=>{const n=t("battleship",4);let[o,c]=l.split("");if(c=Number(c),!1===a){if(c+n.length<10){for(let t=c;t<c+n.length;t++)e[o+t]="battleship";r.push(n)}}else if(!0===a&&o.charCodeAt()+n.length<105){let t=o.charCodeAt();for(let r=t;r<t+n.length;r++){let t=String.fromCharCode(r);e[t+c]="battleship"}r.push(n)}},placeCruiser:(l,a)=>{const n=t("cruiser",3);let[o,c]=l.split("");if(c=Number(c),!1===a){if(c+n.length<10){for(let t=c;t<c+n.length;t++)e[o+t]="cruiser";r.push(n)}}else if(!0===a&&o.charCodeAt()+n.length<105){let t=o.charCodeAt();for(let r=t;r<t+n.length;r++){let t=String.fromCharCode(r);e[t+c]="cruiser"}r.push(n)}},placeSubmarine:(l,a)=>{const n=t("submarine",3);let[o,c]=l.split("");if(c=Number(c),!1===a){if(c+n.length<10){for(let t=c;t<c+n.length;t++)e[o+t]="submarine";r.push(n)}}else if(!0===a&&o.charCodeAt()+n.length<105){let t=o.charCodeAt();for(let r=t;r<t+n.length;r++){let t=String.fromCharCode(r);e[t+c]="submarine"}r.push(n)}},placeDestroyer:(l,a)=>{const n=t("destroyer",2);let[o,c]=l.split("");if(c=Number(c),!1===a){if(c+n.length<10){for(let t=c;t<c+n.length;t++)e[o+t]="destroyer";r.push(n)}}else if(!0===a&&o.charCodeAt()+n.length<105){let t=o.charCodeAt();for(let r=t;r<t+n.length;r++){let t=String.fromCharCode(r);e[t+c]="destroyer"}r.push(n)}},receiveAttack:t=>e[t]?((e=>{switch(e){case"carrier":r[0].hit();break;case"battleship":r[1].hit();break;case"cruiser":r[2].hit();break;case"submarine":r[3].hit();break;case"destroyer":r[4].hit()}})(e[t]),!0):(e[t]="miss",!1),checkAllShipsSunk:()=>{if(5===r.reduce(((e,t)=>e+t.isSunk()),0))return!0},ships:r}}e.d({},{t:()=>d,F:()=>p});const l=e=>{const t={},r=()=>{let e=String.fromCharCode(String(Math.round(7*Math.random()+97))),t=String(Math.floor(8*Math.random())+1);return e.concat(t)};return{makeMove:()=>{let e=r();for(;e in t;)e=r();return t[e]=!0,e},movesMade:t,turn:e}},a=document.getElementById("title-container"),n=document.getElementById("game-container"),o=document.getElementById("game-header"),c=document.getElementById("player-name"),i=document.getElementById("player-name-input"),s=(document.querySelectorAll("#player-gameboard .cell"),document.querySelectorAll("#computer-gameboard .cell"));for(let e of s)e.addEventListener("click",(()=>{if(p[0].turn){h(d[1].receiveAttack(e.dataset.coordinates),e);const t=d[1].checkAllShipsSunk();p[0].turn=!1,t&&alert("Computer loses. You win!"),d[0].receiveAttack(p[1].makeMove()),console.log(d[0].coordinates),p[0].turn=!0}}));function h(e,t){t.style.backgroundColor=e?"rgba(255, 30, 30, 0.7)":"rgba(0, 0, 255, 0.7)"}const u=document.getElementById("start-game"),d=[],p=[];u.addEventListener("click",(()=>{!function(){a.style.display="none",n.style.display="grid",o.style.display="grid";const e=""==i.value?"Your":i.value+"'s";c.innerText=`${e} Board`}(),function(){const e=l(!0);p.push(e);const t=l(!1);p.push(t)}(),function(){const e=r();e.placeCarrier("a1",!1),e.placeBattleship("b1",!1),e.placeCruiser("c1",!1),e.placeSubmarine("d1",!1),e.placeDestroyer("e1",!1),d.push(e);const t=r();t.placeCarrier("a1",!1),t.placeBattleship("b1",!1),t.placeCruiser("c1",!1),t.placeSubmarine("d1",!1),t.placeDestroyer("e1",!1),d.push(t)}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,