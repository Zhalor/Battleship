(()=>{"use strict";function e(e,t){let r=0,l=0;return{name:e,hit:()=>{++l,l===t&&++r},length:t,showHits:()=>l,isSunk:()=>r}}function t(){const t={a1:"",a2:"",a3:"",a4:"",a5:"",a6:"",a7:"",a8:"",b1:"",b2:"",b3:"",b4:"",b5:"",b6:"",b7:"",b8:"",c1:"",c2:"",c3:"",c4:"",c5:"",c6:"",c7:"",c8:"",d1:"",d2:"",d3:"",d4:"",d5:"",d6:"",d7:"",d8:"",e1:"",e2:"",e3:"",e4:"",e5:"",e6:"",e7:"",e8:"",f1:"",f2:"",f3:"",f4:"",f5:"",f6:"",f7:"",f8:"",g1:"",g2:"",g3:"",g4:"",g5:"",g6:"",g7:"",g8:"",h1:"",h2:"",h3:"",h4:"",h5:"",h6:"",h7:"",h8:""},r=[];return{coordinates:t,placeCarrier:(l,a)=>{const n=e("carrier",5);let[s,i]=l.split("");if(i=Number(i),!1===a){if(i+n.length<10){for(let e=i;e<i+n.length;e++)t[s+e]="carrier";r.push(n)}}else if(!0===a&&s.charCodeAt()+n.length<105){let e=s.charCodeAt();for(let r=e;r<e+n.length;r++){let e=String.fromCharCode(r);t[e+i]="carrier"}r.push(n)}},placeBattleship:(l,a)=>{const n=e("battleship",4);let[s,i]=l.split("");if(i=Number(i),!1===a){if(i+n.length<10){for(let e=i;e<i+n.length;e++)t[s+e]="battleship";r.push(n)}}else if(!0===a&&s.charCodeAt()+n.length<105){let e=s.charCodeAt();for(let r=e;r<e+n.length;r++){let e=String.fromCharCode(r);t[e+i]="battleship"}r.push(n)}},placeCruiser:(l,a)=>{const n=e("cruiser",3);let[s,i]=l.split("");if(i=Number(i),!1===a){if(i+n.length<10){for(let e=i;e<i+n.length;e++)t[s+e]="cruiser";r.push(n)}}else if(!0===a&&s.charCodeAt()+n.length<105){let e=s.charCodeAt();for(let r=e;r<e+n.length;r++){let e=String.fromCharCode(r);t[e+i]="cruiser"}r.push(n)}},placeSubmarine:(l,a)=>{const n=e("submarine",3);let[s,i]=l.split("");if(i=Number(i),!1===a){if(i+n.length<10){for(let e=i;e<i+n.length;e++)t[s+e]="submarine";r.push(n)}}else if(!0===a&&s.charCodeAt()+n.length<105){let e=s.charCodeAt();for(let r=e;r<e+n.length;r++){let e=String.fromCharCode(r);t[e+i]="submarine"}r.push(n)}},placeDestroyer:(l,a)=>{const n=e("destroyer",2);let[s,i]=l.split("");if(i=Number(i),!1===a){if(i+n.length<10){for(let e=i;e<i+n.length;e++)t[s+e]="destroyer";r.push(n)}}else if(!0===a&&s.charCodeAt()+n.length<105){let e=s.charCodeAt();for(let r=e;r<e+n.length;r++){let e=String.fromCharCode(r);t[e+i]="destroyer"}r.push(n)}},receiveAttack:e=>(t[e]?(e=>{switch(e){case"carrier":r[0].hit();break;case"battleship":r[1].hit();break;case"cruiser":r[2].hit();break;case"submarine":r[3].hit();break;case"destroyer":r[4].hit()}})(t[e]):t[e]="miss",(()=>{if(5===r.reduce(((e,t)=>e+t.isSunk()),0))return!0})()),ships:r}}const r=()=>{const e={},t=()=>{let e=String.fromCharCode(String(Math.round(7*Math.random()+97))),t=String(Math.floor(8*Math.random())+1);return e.concat(t)};return{makeMove:()=>{let r=t();for(;r in e;)r=t();return e[r]=!0,r},movesMade:e}},l=document.getElementById("title-container"),a=document.getElementById("game-container"),n=document.getElementById("game-header"),s=document.getElementById("player-name"),i=document.getElementById("player-name-input"),c=document.querySelectorAll(".cell");for(let e of c)e.addEventListener("click",(()=>{console.log(e.dataset.coordinates)}));const o=document.getElementById("start-game"),h=[],d=[];o.addEventListener("click",(()=>{!function(){l.style.display="none",a.style.display="grid",n.style.display="grid";const e=""==i.value?"Your":i.value+"'s";s.innerText=`${e} Board`}(),function(){const e=r();d.push(e);const t=r();d.push(t)}(),function(){const e=t();e.placeCarrier("a1",!1),e.placeBattleship("b1",!1),e.placeCruiser("c1",!1),e.placeSubmarine("d1",!1),e.placeDestroyer("e1",!1),h.push(e);const r=t();r.placeCarrier("a1",!1),r.placeBattleship("b1",!1),r.placeCruiser("c1",!1),r.placeSubmarine("d1",!1),r.placeDestroyer("e1",!1),h.push(r)}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,