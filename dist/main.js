(()=>{"use strict";var e={d:(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(e,t){let n=0,a=0;return{name:e,hit:()=>{++a,a===t&&++n},length:t,showHits:()=>a,isSunk:()=>n}}e.d({},{t:()=>N,F:()=>$});const n=document.getElementById("game-over-modal"),a=document.getElementById("winner-name-display"),r=document.getElementById("title-container"),s=document.getElementById("game-container"),l=document.getElementById("game-header"),o=document.getElementById("player-name"),i=document.getElementById("enemy-name"),c=document.getElementById("player-name-input"),d=document.getElementById("ship-placement-container"),m=document.getElementById("place-ship-header"),u=document.getElementById("ship-name"),p=document.getElementById("ship-placement-input"),y=document.getElementById("place-ship-btn"),h=document.getElementById("rotate-btn"),g=document.getElementById("start-round-btn"),f=document.getElementById("computer-gameboard"),b=document.querySelectorAll("#computer-gameboard .cell");function B(){r.style.display="none",s.style.display="grid",l.style.display="grid",f.style.display="none",d.style.display="flex",y.style.display="inline",h.style.display="inline",g.style.display="none";const e=""==c.value?"Your":c.value+"'s";o.innerText=`${e} Board`,u.innerText="Carrier"}for(let e of b)e.addEventListener("click",(()=>{["hit","miss"].some((t=>e.classList.contains(t)))||$[0].turn&&(E(e.dataset.coordinates,N[1]),N[1].checkAllShipsSunk()&&I("Computer loses. You win!"),$[0].turn=!1,E($[1].makeMove(),N[0]),N[0].checkAllShipsSunk()&&I("You lose. Computer wins."),$[0].turn=!0)}));function E(e,t){!function(e,t,n){let a=null;a="player"===n.name?document.querySelector(`#player-gameboard [data-coordinates="${t}"]`):document.querySelector(`#computer-gameboard [data-coordinates="${t}"]`),e?a.classList.add("hit"):a.classList.add("miss")}(t.receiveAttack(e),e,t)}function I(e){n.style.display="block",a.innerText=e}const S=document.getElementById("ship-name");function k(e){const n={a1:"",a2:"",a3:"",a4:"",a5:"",a6:"",a7:"",a8:"",b1:"",b2:"",b3:"",b4:"",b5:"",b6:"",b7:"",b8:"",c1:"",c2:"",c3:"",c4:"",c5:"",c6:"",c7:"",c8:"",d1:"",d2:"",d3:"",d4:"",d5:"",d6:"",d7:"",d8:"",e1:"",e2:"",e3:"",e4:"",e5:"",e6:"",e7:"",e8:"",f1:"",f2:"",f3:"",f4:"",f5:"",f6:"",f7:"",f8:"",g1:"",g2:"",g3:"",g4:"",g5:"",g6:"",g7:"",g8:"",h1:"",h2:"",h3:"",h4:"",h5:"",h6:"",h7:"",h8:""},a=["Carrier","Battleship","Cruiser","Submarine","Destroyer"],r=[];let s=0;function l(e,t,l,o,i,c){if(!1===i){if(o+e.length<10){const i=function(e,t,a){const r=[];for(let s=t;s<t+e;s++){if(n[a+s])return!1;r.push(a+s)}return r}(e.length,o,l);if(0!=i){for(let e of i)n[e]=t,1==c&&(document.querySelector(`[data-coordinates="${e}"]`).classList.add("ship"),S.innerText=a[s+1]);r.push(e),s++,document.getElementById("ship-placement-input").classList.remove("error")}else document.getElementById("ship-placement-input").classList.add("error")}}else if(!0===i&&l.charCodeAt()+e.length<106){const i=function(e,t,a){const r=[];for(let s=t;s<t+e;s++){let e=String.fromCharCode(s);if(n[e+a])return!1;r.push(e+a)}return r}(e.length,l.charCodeAt(),o);if(0!=i){for(let e of i)n[e]=t,1==c&&(document.querySelector(`[data-coordinates="${e}"]`).classList.add("ship"),S.innerText=a[s+1]);r.push(e),s++,document.getElementById("ship-placement-input").classList.remove("error")}else document.getElementById("ship-placement-input").classList.add("error")}}return{coordinates:n,ships:r,name:e,placeCarrier:(e,n,a)=>{const r=t("carrier",5);let[s,o]=e.split("");o=Number(o),s<"i"&&/[a-z]/.test(s)&&l(r,"carrier",s,o,n,a)},placeBattleship:(e,n,a)=>{const r=t("battleship",4);let[s,o]=e.split("");o=Number(o),s<"i"&&/[a-z]/.test(s)&&l(r,"battleship",s,o,n,a)},placeCruiser:(e,n,a)=>{const r=t("cruiser",3);let[s,o]=e.split("");o=Number(o),s<"i"&&/[a-z]/.test(s)&&l(r,"cruiser",s,o,n,a)},placeSubmarine:(e,n,a)=>{const r=t("submarine",3);let[s,o]=e.split("");o=Number(o),s<"i"&&/[a-z]/.test(s)&&l(r,"submarine",s,o,n,a)},placeDestroyer:(e,n,a)=>{const r=t("destroyer",2);let[o,i]=e.split("");i=Number(i),o<"i"&&/[a-z]/.test(o)&&l(r,"destroyer",o,i,n,a),5===s&&(y.style.display="none",h.style.display="none",u.style.display="none",p.style.display="none",g.style.display="inline",m.innerText="Prepare For Battle!")},receiveAttack:e=>n[e]?((e=>{switch(e){case"carrier":r[0].hit();break;case"battleship":r[1].hit();break;case"cruiser":r[2].hit();break;case"submarine":r[3].hit();break;case"destroyer":r[4].hit()}})(n[e]),!0):(n[e]="miss",!1),checkAllShipsSunk:()=>{if(5===r.reduce(((e,t)=>e+t.isSunk()),0))return!0},getShipsPlaced:()=>s}}const v=e=>{const t={},n=()=>{let e=String.fromCharCode(String(Math.round(7*Math.random()+97))),t=String(Math.floor(8*Math.random())+1);return e.concat(t)};return{turn:e,makeMove:()=>{let e=n();for(;e in t;)e=n();return t[e]=!0,e},generateCoordinate:n,generateBoolean:()=>1==Math.floor(2*Math.random())}},C=document.getElementById("start-game"),L=document.getElementById("game-over-modal"),x=document.getElementById("game-over-btn"),P=document.getElementById("ship-placement-input"),T=document.getElementById("rotate-btn"),w=document.getElementById("start-round-btn"),A=document.getElementById("place-ship-btn"),M=document.getElementById("enemy-name"),q=document.getElementById("place-ship-header"),z=document.getElementById("ship-name"),N=[],$=[];let D=!1;function Y(){const e=v(!0),t=v(!1);$.push(e),$.push(t)}function O(){const e=k("player"),t=k("computer");N.push(e),N.push(t)}C.addEventListener("click",(()=>{B(),Y(),O(),P.focus()})),A.addEventListener("click",(()=>{!function(){switch(N[0].getShipsPlaced()){case 0:N[0].placeCarrier(P.value,D,!0),D=!1;break;case 1:N[0].placeBattleship(P.value,D,!0),D=!1;break;case 2:N[0].placeCruiser(P.value,D,!0),D=!1;break;case 3:N[0].placeSubmarine(P.value,D,!0),D=!1;break;case 4:N[0].placeDestroyer(P.value,D,!0),D=!1}}(),P.value="",P.focus(),T.classList.remove("scale-down")})),T.addEventListener("click",(()=>{D=0==D,T.classList.add("scale-down")})),w.addEventListener("click",(()=>{for(;N[1].getShipsPlaced()<1;)N[1].placeCarrier($[1].generateCoordinate(),$[1].generateBoolean());for(;N[1].getShipsPlaced()<2;)N[1].placeBattleship($[1].generateCoordinate(),$[1].generateBoolean());for(;N[1].getShipsPlaced()<3;)N[1].placeCruiser($[1].generateCoordinate(),$[1].generateBoolean());for(;N[1].getShipsPlaced()<4;)N[1].placeSubmarine($[1].generateCoordinate(),$[1].generateBoolean());for(;N[1].getShipsPlaced()<5;)N[1].placeDestroyer($[1].generateCoordinate(),$[1].generateBoolean());d.style.display="none",f.style.display="block",i.innerText="Enemy's Board"})),x.addEventListener("click",(()=>{const e=document.querySelectorAll(".cell");for(let t of e)t.classList.remove("hit","miss","ship");L.style.display="none",P.style.display="inline",M.innerText="Type in your coordinates to place a ship",q.innerText="Place Your Ships",z.innerText="Carrier",N.length=0,$.length=0,Y(),O(),B()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,